// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewReview extends ethereum.Event {
  get params(): NewReview__Params {
    return new NewReview__Params(this);
  }
}

export class NewReview__Params {
  _event: NewReview;

  constructor(event: NewReview) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get review(): string {
    return this._event.parameters[1].value.toString();
  }

  get rating(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get assetHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get assetId(): string {
    return this._event.parameters[4].value.toString();
  }

  get chainId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class HumbleOpinion__getResult {
  value0: BigInt;
  value1: Address;
  value2: string;
  value3: BigInt;
  value4: string;
  value5: string;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: string,
    value3: BigInt,
    value4: string,
    value5: string,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getAuthor(): Address {
    return this.value1;
  }

  getText(): string {
    return this.value2;
  }

  getRating(): BigInt {
    return this.value3;
  }

  getAssetHash(): string {
    return this.value4;
  }

  getAssetId(): string {
    return this.value5;
  }

  getChainId(): BigInt {
    return this.value6;
  }
}

export class HumbleOpinion__reviewsResult {
  value0: BigInt;
  value1: string;
  value2: boolean;
  value3: Address;
  value4: string;
  value5: string;
  value6: BigInt;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: string,
    value2: boolean,
    value3: Address,
    value4: string,
    value5: string,
    value6: BigInt,
    value7: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getText(): string {
    return this.value1;
  }

  getOwnerWhenReviewed(): boolean {
    return this.value2;
  }

  getAuthor(): Address {
    return this.value3;
  }

  getAssetHash(): string {
    return this.value4;
  }

  getAssetId(): string {
    return this.value5;
  }

  getRating(): BigInt {
    return this.value6;
  }

  getChainId(): BigInt {
    return this.value7;
  }
}

export class HumbleOpinion extends ethereum.SmartContract {
  static bind(address: Address): HumbleOpinion {
    return new HumbleOpinion("HumbleOpinion", address);
  }

  get(_index: BigInt): HumbleOpinion__getResult {
    let result = super.call(
      "get",
      "get(uint256):(uint256,address,string,uint256,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );

    return new HumbleOpinion__getResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toString(),
      result[5].toString(),
      result[6].toBigInt()
    );
  }

  try_get(_index: BigInt): ethereum.CallResult<HumbleOpinion__getResult> {
    let result = super.tryCall(
      "get",
      "get(uint256):(uint256,address,string,uint256,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HumbleOpinion__getResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toString(),
        value[5].toString(),
        value[6].toBigInt()
      )
    );
  }

  reviewCount(): BigInt {
    let result = super.call("reviewCount", "reviewCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_reviewCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("reviewCount", "reviewCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reviews(param0: BigInt): HumbleOpinion__reviewsResult {
    let result = super.call(
      "reviews",
      "reviews(uint256):(uint256,string,bool,address,string,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new HumbleOpinion__reviewsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toBoolean(),
      result[3].toAddress(),
      result[4].toString(),
      result[5].toString(),
      result[6].toBigInt(),
      result[7].toBigInt()
    );
  }

  try_reviews(
    param0: BigInt
  ): ethereum.CallResult<HumbleOpinion__reviewsResult> {
    let result = super.tryCall(
      "reviews",
      "reviews(uint256):(uint256,string,bool,address,string,string,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HumbleOpinion__reviewsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toBoolean(),
        value[3].toAddress(),
        value[4].toString(),
        value[5].toString(),
        value[6].toBigInt(),
        value[7].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get _text(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _owned(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get _assetHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _assetId(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _rating(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _chainId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }
}
